{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Imdb sentiment Analysis","metadata":{}},{"cell_type":"code","source":"!pip install pandas numpy transformers tokenizers datasets evaluate wandb scikit-learn torch seaborn -q","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-10T10:50:05.566977Z","iopub.execute_input":"2024-09-10T10:50:05.567728Z","iopub.status.idle":"2024-09-10T10:50:18.644815Z","shell.execute_reply.started":"2024-09-10T10:50:05.567685Z","shell.execute_reply":"2024-09-10T10:50:18.643584Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n\nfrom datasets import load_dataset, Dataset, DatasetDict\nfrom transformers import AutoTokenizer, AutoModelForSequenceClassification, DataCollatorWithPadding","metadata":{"execution":{"iopub.status.busy":"2024-09-10T10:50:20.088134Z","iopub.execute_input":"2024-09-10T10:50:20.088551Z","iopub.status.idle":"2024-09-10T10:50:26.654089Z","shell.execute_reply.started":"2024-09-10T10:50:20.088509Z","shell.execute_reply":"2024-09-10T10:50:26.653280Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"# read data\n# load imdb from hf\nimdb_ds = load_dataset(\"imdb\", split=\"train+test\")","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:39:10.667977Z","iopub.execute_input":"2024-09-10T11:39:10.668995Z","iopub.status.idle":"2024-09-10T11:39:16.914584Z","shell.execute_reply.started":"2024-09-10T11:39:10.668948Z","shell.execute_reply":"2024-09-10T11:39:16.913637Z"},"trusted":true},"execution_count":94,"outputs":[]},{"cell_type":"code","source":"# split data\ntrain_test_split = imdb_ds.train_test_split(test_size=0.2) # train - 80% and test - 20%\ntrain_test_split","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:39:54.962784Z","iopub.execute_input":"2024-09-10T11:39:54.963185Z","iopub.status.idle":"2024-09-10T11:39:56.233693Z","shell.execute_reply.started":"2024-09-10T11:39:54.963147Z","shell.execute_reply":"2024-09-10T11:39:56.232700Z"},"trusted":true},"execution_count":96,"outputs":[{"execution_count":96,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['text', 'label'],\n        num_rows: 40000\n    })\n    test: Dataset({\n        features: ['text', 'label'],\n        num_rows: 10000\n    })\n})"},"metadata":{}}]},{"cell_type":"code","source":"# split test into test and val\ntest_val_split = train_test_split['test'].train_test_split(test_size=0.5)\ntest_val_split","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:01.292834Z","iopub.execute_input":"2024-09-10T11:40:01.293518Z","iopub.status.idle":"2024-09-10T11:40:02.668307Z","shell.execute_reply.started":"2024-09-10T11:40:01.293461Z","shell.execute_reply":"2024-09-10T11:40:02.667376Z"},"trusted":true},"execution_count":97,"outputs":[{"execution_count":97,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['text', 'label'],\n        num_rows: 5000\n    })\n    test: Dataset({\n        features: ['text', 'label'],\n        num_rows: 5000\n    })\n})"},"metadata":{}}]},{"cell_type":"code","source":"# rename to train, test and val\nds = DatasetDict({\n    'train': train_test_split['train'],\n    'test': test_val_split['test'],\n    'val': test_val_split['train']})","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:05.332415Z","iopub.execute_input":"2024-09-10T11:40:05.333206Z","iopub.status.idle":"2024-09-10T11:40:07.148365Z","shell.execute_reply.started":"2024-09-10T11:40:05.333157Z","shell.execute_reply":"2024-09-10T11:40:07.147392Z"},"trusted":true},"execution_count":98,"outputs":[]},{"cell_type":"code","source":"ds","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:11.171558Z","iopub.execute_input":"2024-09-10T11:40:11.172340Z","iopub.status.idle":"2024-09-10T11:40:13.780883Z","shell.execute_reply.started":"2024-09-10T11:40:11.172301Z","shell.execute_reply":"2024-09-10T11:40:13.779976Z"},"trusted":true},"execution_count":99,"outputs":[{"execution_count":99,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['text', 'label'],\n        num_rows: 40000\n    })\n    test: Dataset({\n        features: ['text', 'label'],\n        num_rows: 5000\n    })\n    val: Dataset({\n        features: ['text', 'label'],\n        num_rows: 5000\n    })\n})"},"metadata":{}}]},{"cell_type":"code","source":"ds['train'][1]","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:16.670511Z","iopub.execute_input":"2024-09-10T11:40:16.670891Z","iopub.status.idle":"2024-09-10T11:40:17.861424Z","shell.execute_reply.started":"2024-09-10T11:40:16.670858Z","shell.execute_reply":"2024-09-10T11:40:17.860484Z"},"trusted":true},"execution_count":100,"outputs":[{"execution_count":100,"output_type":"execute_result","data":{"text/plain":"{'text': 'Where would Hollywood have been without Fredric March as Robert Browning or Dennis Price as Lord Byron, famous lovers in their day? Even an actor as normally straitlaced as Michael Redgrave once brought some moody charm to a portrayal of W.B. Yeats. Writers\\' lives are an endless source of inspiration.<br /><br />But of all poets it was Dylan Thomas, the roistering, free-loving Welshman who enjoyed a pint or two (and drank himself to death in New York at the age of 39), who was closest in spirit to the film industry. During World War II, he produced scripts for British propaganda documentaries. He even wrote the screenplay of a vapid melodrama called The Three Weird Sisters, in which three old maids in a Welsh village plot the murder of their rich half-brother. All that is now forgiven.<br /><br />In John Maybury\\'s The Edge of Love, Thomas is played by the Welsh actor Matthew Rhys. It\\'s not a full-scale biopic. The film covers four years in the poet\\'s life during World War II, when he lived with two women: his wife Caitlin (Sienna Miller) and a former lover Vera Phillips (Keira Knightley), whom he met again by chance during the war. It seems he loved them both. The relationship of these extraordinary women -- to Thomas and to each other -- is at the heart of Maybury\\'s absorbing film.<br /><br />How it came to be made is a story almost as remarkable as that of the lovers themselves. Rebekah Gilbertson, the film\\'s producer, is the granddaughter of Vera Phillips and William Killick. William, a war hero (played in the film by Cillian Murphy), married Vera while she was still in love with the poet. Gilbertson was inspired to make the film when she discovered a book about her grandparents, Dylan Thomas: A Farm, Two Mansions and Bungalow, by David Thomas, describing their tangled lives. Sharman Macdonald, who wrote the screenplay, is the mother of Knightley. The part requires Knightley to sing, and her mother included songs especially for her. Surely no film with such felicitous family connections deserves to do other than succeed.<br /><br />We begin in London during the Blitz. Bombs are falling, sirens are wailing, and Phillips is singing to sheltering crowds in an underground Tube station. In a pub, by chance, she meets Thomas and discovers after all these years that he has a wife and child. Phillips and Caitlin form a friendship untroubled by jealousy or rancour and are soon sharing beds and bathtubs, listening to Thomas read his poems, exchanging intimate secrets and smoking their heads off, as everyone did in wartime. Caitlin turns out to be more experienced in the ways of the world (\"My first was Augustus John, he seduced me when I was 15\"). But it\\'s the refined and soulful Phillips who stirs Thomas\\'s deepest responses and eventually succumbs to his charms. In the meantime, she has reluctantly married Killick, who has seen her in the Tube station and been instantly captivated by her beauty (if not her singing).<br /><br />It is an intense and strangely beautiful film, though Thomas himself may be its least impressive character. He is best remembered for Under Milk Wood, his verse radio play about a day in the life of the mythical Welsh village of Llareggub, whose name spelt backwards was not something polite English teachers drew attention to. I once had a vinyl recording of Richard Burton reading the poem (he appeared in a film of Under Milk Wood in 1971), and I\\'ve never forgotten the creamy, seductive quality of his voice. The legendary charisma, the magnetism of the man, is something I missed in Rhys\\'s performance. Thomas comes across as a strangely pallid, even secondary, figure compared with the women in his life.<br /><br />In his previous film, Love Is the Devil, Maybury explored the turbulent life of painter Francis Bacon and his sadomasochistic relationship with his lover and model, George Dyer. The Edge of Love seems to me a richer and more satisfying film. If you ask what insights it offers into the springs of Thomas\\'s creative inspiration, I would have to say Llareggub. But as an insight into his egotism, his smouldering moods and his general indifference to the feelings of others, it is wonderfully sad and revealing.<br /><br />Thomas had a good war, boozing and writing while other men (including Killick) were being traumatised by the horrors of battle. In one scene near the end, Thomas\\'s behaviour towards his friends seems unforgivably callous. But this is not, after all, Thomas\\'s film. Murphy gives us a magnificent study in doomed passion and the emotional debilitation of war. Miller is charming and pathetic as the wife. And Knightley looks almost too exquisitely delicate to be real (as she did in Pride and Prejudice). But this is probably her finest performance. And in every respect the film is worthy of her.',\n 'label': 1}"},"metadata":{}}]},{"cell_type":"code","source":"ds['val'][1]","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:26.668827Z","iopub.execute_input":"2024-09-10T11:40:26.669739Z","iopub.status.idle":"2024-09-10T11:40:27.772585Z","shell.execute_reply.started":"2024-09-10T11:40:26.669694Z","shell.execute_reply":"2024-09-10T11:40:27.771550Z"},"trusted":true},"execution_count":101,"outputs":[{"execution_count":101,"output_type":"execute_result","data":{"text/plain":"{'text': 'I admire \\'Kissing on the Mouth\\' for its frankness \\x96 pubic hair cutting and masturbation, especially from the lead/director Joe Swanberg. They weren\\'t afraid to show trueness to everyday \"private\" occurrences. Unfortunately, the film falls under the \\'The Brown Bunny\\' realm, though with a slightly more developed plot of jealousy. Yes, it mirrors \\'Bunny\\' with a whole lot of nothing going on, or too many cinematography shots focused (or sincerely unfocused) on absolutely nothing \\x96 feet, hands or genitals. Again, unfortunately, I can see why this film was released, and why people are renting: true life sex scenes and full frontal (equally, both male and female) nudity. Other than that, it was a complete waste of time. We quickly learn of a post-college male/female roommate pair in which the male has obvious feelings for the female that sees him as just a friend while continuously having sex with her ex-boyfriend. Other than that, we are subjected to the every-day events of their boring lives: she works for her parents; he works on an extremely uninteresting sexual awareness project on his computer. For this all to work, the dialogue has to be interesting and the acting real. Neither work and it\\'s as boring as watching someone drive for an hour, i.e. \\'The Brown Bunny.\\' The only actor that stands out is Kate Winterich, and even she does some questionable acting. (The DVD extra with her in front of a mike is actually worth watching/listening to.) Again, I admire the filmmakers, especially Swanberg, for baring it all and not being afraid to expose themselves or shower-habits, but overall the film falls flat. It has narrations that doesn\\'t fit the scenes, too many boring everyday events and unconvincing acting that you wonder, other than the soft-porn factor, why you rented this.',\n 'label': 0}"},"metadata":{}}]},{"cell_type":"code","source":"ds['train'].features","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:31.455585Z","iopub.execute_input":"2024-09-10T11:40:31.456326Z","iopub.status.idle":"2024-09-10T11:40:32.691927Z","shell.execute_reply.started":"2024-09-10T11:40:31.456285Z","shell.execute_reply":"2024-09-10T11:40:32.690951Z"},"trusted":true},"execution_count":102,"outputs":[{"execution_count":102,"output_type":"execute_result","data":{"text/plain":"{'text': Value(dtype='string', id=None),\n 'label': ClassLabel(names=['neg', 'pos'], id=None)}"},"metadata":{}}]},{"cell_type":"code","source":"id2label = {\n    1: 'positive',\n    0: 'negative'\n}","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:22:48.742492Z","iopub.execute_input":"2024-09-10T11:22:48.743413Z","iopub.status.idle":"2024-09-10T11:22:50.571108Z","shell.execute_reply.started":"2024-09-10T11:22:48.743358Z","shell.execute_reply":"2024-09-10T11:22:50.570180Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"code","source":"label2id = {\n    'positive': 1,\n    'negative': 0\n}","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:22:51.227415Z","iopub.execute_input":"2024-09-10T11:22:51.228380Z","iopub.status.idle":"2024-09-10T11:22:53.067584Z","shell.execute_reply.started":"2024-09-10T11:22:51.228337Z","shell.execute_reply":"2024-09-10T11:22:53.066603Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"markdown","source":"#### Tokenizer","metadata":{}},{"cell_type":"code","source":"tokenizer = AutoTokenizer.from_pretrained(\"distilbert-base-uncased\")","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:22:58.905956Z","iopub.execute_input":"2024-09-10T11:22:58.906892Z","iopub.status.idle":"2024-09-10T11:23:01.001165Z","shell.execute_reply.started":"2024-09-10T11:22:58.906848Z","shell.execute_reply":"2024-09-10T11:23:01.000217Z"},"trusted":true},"execution_count":61,"outputs":[]},{"cell_type":"code","source":"# tokenize review text data\ndef tokenize(data):\n    tokenized_batch = tokenizer(data['text'], padding=True, truncation=True, max_length=128)\n#     tokenized_batch[\"labels\"] = [features[\"labels\"].str2int(label) for label in data[\"labels\"]]\n    return tokenized_batch","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:50.447104Z","iopub.execute_input":"2024-09-10T11:40:50.447531Z","iopub.status.idle":"2024-09-10T11:40:51.720879Z","shell.execute_reply.started":"2024-09-10T11:40:50.447466Z","shell.execute_reply":"2024-09-10T11:40:51.719978Z"},"trusted":true},"execution_count":103,"outputs":[]},{"cell_type":"code","source":"# max context size\ntokenizer.model_max_length","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:52.262363Z","iopub.execute_input":"2024-09-10T11:40:52.262766Z","iopub.status.idle":"2024-09-10T11:40:53.366357Z","shell.execute_reply.started":"2024-09-10T11:40:52.262729Z","shell.execute_reply":"2024-09-10T11:40:53.365621Z"},"trusted":true},"execution_count":104,"outputs":[{"execution_count":104,"output_type":"execute_result","data":{"text/plain":"512"},"metadata":{}}]},{"cell_type":"code","source":"# tokenize dataset\ntokenized_datasets = ds.map(tokenize_data, batched=True)","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:40:57.214414Z","iopub.execute_input":"2024-09-10T11:40:57.215301Z","iopub.status.idle":"2024-09-10T11:41:30.514722Z","shell.execute_reply.started":"2024-09-10T11:40:57.215257Z","shell.execute_reply":"2024-09-10T11:41:30.513728Z"},"trusted":true},"execution_count":105,"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/40000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e73869079e3749c3ad5f1646adda8bb7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/5000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"364a305d11b745b3967f3ef2a4119a8d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/5000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d33a9e9e04764d86b57a232efc7d47ea"}},"metadata":{}}]},{"cell_type":"code","source":"tokenized_datasets","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:41:36.167506Z","iopub.execute_input":"2024-09-10T11:41:36.168300Z","iopub.status.idle":"2024-09-10T11:41:37.452724Z","shell.execute_reply.started":"2024-09-10T11:41:36.168254Z","shell.execute_reply":"2024-09-10T11:41:37.451700Z"},"trusted":true},"execution_count":106,"outputs":[{"execution_count":106,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['text', 'label', 'input_ids', 'attention_mask'],\n        num_rows: 40000\n    })\n    test: Dataset({\n        features: ['text', 'label', 'input_ids', 'attention_mask'],\n        num_rows: 5000\n    })\n    val: Dataset({\n        features: ['text', 'label', 'input_ids', 'attention_mask'],\n        num_rows: 5000\n    })\n})"},"metadata":{}}]},{"cell_type":"code","source":"# get review sample size\ntokenized_samples = tokenized_datasets[\"train\"][:5]\n\nfor idx, sample in enumerate(tokenized_samples[\"input_ids\"]):\n    print(f\"Review {idx} length: {len(sample)}'\")","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:41:55.561090Z","iopub.execute_input":"2024-09-10T11:41:55.561520Z","iopub.status.idle":"2024-09-10T11:41:56.910775Z","shell.execute_reply.started":"2024-09-10T11:41:55.561456Z","shell.execute_reply":"2024-09-10T11:41:56.909857Z"},"trusted":true},"execution_count":107,"outputs":[{"name":"stdout","text":"Review 0 length: 512'\nReview 1 length: 512'\nReview 2 length: 512'\nReview 3 length: 512'\nReview 4 length: 512'\n","output_type":"stream"}]},{"cell_type":"code","source":"# since sample has same size we will use datacollator to convert \n# our samples to PyTorch tensors and concatenate them with the correct amount of padding\ndata_collator = DataCollatorWithPadding(tokenizer=tokenizer)","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:42:00.216641Z","iopub.execute_input":"2024-09-10T11:42:00.217441Z","iopub.status.idle":"2024-09-10T11:42:01.273691Z","shell.execute_reply.started":"2024-09-10T11:42:00.217397Z","shell.execute_reply":"2024-09-10T11:42:01.272715Z"},"trusted":true},"execution_count":108,"outputs":[]},{"cell_type":"code","source":"data_collator","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:42:03.614436Z","iopub.execute_input":"2024-09-10T11:42:03.615190Z","iopub.status.idle":"2024-09-10T11:42:04.813219Z","shell.execute_reply.started":"2024-09-10T11:42:03.615148Z","shell.execute_reply":"2024-09-10T11:42:04.812216Z"},"trusted":true},"execution_count":109,"outputs":[{"execution_count":109,"output_type":"execute_result","data":{"text/plain":"DataCollatorWithPadding(tokenizer=DistilBertTokenizerFast(name_or_path='distilbert-base-uncased', vocab_size=30522, model_max_length=512, is_fast=True, padding_side='right', truncation_side='right', special_tokens={'unk_token': '[UNK]', 'sep_token': '[SEP]', 'pad_token': '[PAD]', 'cls_token': '[CLS]', 'mask_token': '[MASK]'}, clean_up_tokenization_spaces=True),  added_tokens_decoder={\n\t0: AddedToken(\"[PAD]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t100: AddedToken(\"[UNK]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t101: AddedToken(\"[CLS]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t102: AddedToken(\"[SEP]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n\t103: AddedToken(\"[MASK]\", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),\n}, padding=True, max_length=None, pad_to_multiple_of=None, return_tensors='pt')"},"metadata":{}}]},{"cell_type":"markdown","source":"##### Evaluation matrices","metadata":{}},{"cell_type":"code","source":"import evaluate","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:24:21.696783Z","iopub.execute_input":"2024-09-10T11:24:21.697190Z","iopub.status.idle":"2024-09-10T11:24:22.771504Z","shell.execute_reply.started":"2024-09-10T11:24:21.697154Z","shell.execute_reply":"2024-09-10T11:24:22.770452Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"# evaluation matrices\ndef compute_metrics(eval_pred):\n    metric1 = evaluate.load(\"precision\")\n    metric2 = evaluate.load(\"recall\")\n    metric3 = evaluate.load(\"f1\")\n    metric4 = evaluate.load(\"accuracy\")\n\n    logits, labels = eval_pred\n    predictions = np.argmax(logits, axis=-1)\n\n    precision = metric1.compute(predictions=predictions, \n                                references=labels,\n                                average=\"micro\")[\"precision\"]\n    \n    recall = metric2.compute(predictions=predictions, \n                             references=labels,\n                             average=\"micro\")[\"recall\"]\n    \n    f1 = metric3.compute(predictions=predictions, \n                         references=labels,\n                         average=\"micro\")[\"f1\"]\n    \n    accuracy = metric4.compute(predictions=predictions, \n                               references=labels)[\"accuracy\"]\n\n    return {\"precision\": precision, \n            \"recall\": recall, \n            \"f1\": f1,\n            \"accuracy\": accuracy}","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:42:11.442550Z","iopub.execute_input":"2024-09-10T11:42:11.443436Z","iopub.status.idle":"2024-09-10T11:42:12.621835Z","shell.execute_reply.started":"2024-09-10T11:42:11.443393Z","shell.execute_reply":"2024-09-10T11:42:12.620921Z"},"trusted":true},"execution_count":110,"outputs":[]},{"cell_type":"code","source":"# init wandb\nimport wandb\n# wandb.login()","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:02:29.888996Z","iopub.execute_input":"2024-09-10T11:02:29.889717Z","iopub.status.idle":"2024-09-10T11:02:30.208716Z","shell.execute_reply.started":"2024-09-10T11:02:29.889675Z","shell.execute_reply":"2024-09-10T11:02:30.207748Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"wandb.init(\n    # set the wandb project\n    project=\"imdb-sentiment\",\n)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Model init and training","metadata":{}},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:02:54.407334Z","iopub.execute_input":"2024-09-10T11:02:54.407741Z","iopub.status.idle":"2024-09-10T11:02:55.952949Z","shell.execute_reply.started":"2024-09-10T11:02:54.407706Z","shell.execute_reply":"2024-09-10T11:02:55.952178Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"model = AutoModelForSequenceClassification.from_pretrained(\n    \"distilbert-base-uncased\",\n    num_labels=2,\n    id2label=id2label,\n    label2id=label2id\n)","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:42:19.228824Z","iopub.execute_input":"2024-09-10T11:42:19.229968Z","iopub.status.idle":"2024-09-10T11:42:20.609689Z","shell.execute_reply.started":"2024-09-10T11:42:19.229914Z","shell.execute_reply":"2024-09-10T11:42:20.608732Z"},"trusted":true},"execution_count":111,"outputs":[{"name":"stderr","text":"Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n","output_type":"stream"}]},{"cell_type":"code","source":"from transformers import TrainingArguments, Trainer","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:24:37.123599Z","iopub.execute_input":"2024-09-10T11:24:37.124510Z","iopub.status.idle":"2024-09-10T11:24:38.371275Z","shell.execute_reply.started":"2024-09-10T11:24:37.124444Z","shell.execute_reply":"2024-09-10T11:24:38.370249Z"},"trusted":true},"execution_count":72,"outputs":[]},{"cell_type":"code","source":"# training\nmodel_name = \"distilbert-base-sentiment-imdb\"\nbatch_size = 8\n# Show the training loss with every epoch\nlogging_steps = len(tokenized_datasets[\"train\"]) // batch_size\n\ntraining_args = TrainingArguments(\n    output_dir=f\"models/{model_name}\",\n    learning_rate=2e-5,\n    per_device_train_batch_size=batch_size,\n    per_device_eval_batch_size=batch_size,\n    num_train_epochs=1,\n    weight_decay=0.01,\n    logging_steps = logging_steps,\n    logging_strategy='epoch',\n    eval_steps=500,\n    report_to=\"wandb\",\n    # remove_unused_columns=False,                 # as to not lose out labels during training\n    fp16 = True,                                 # enable mixed precision\n)\n\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=tokenized_datasets[\"train\"],\n    eval_dataset=tokenized_datasets[\"test\"],\n    tokenizer=tokenizer,\n    data_collator=data_collator,\n    compute_metrics=compute_metrics,\n)","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:42:23.699189Z","iopub.execute_input":"2024-09-10T11:42:23.699593Z","iopub.status.idle":"2024-09-10T11:42:24.886718Z","shell.execute_reply.started":"2024-09-10T11:42:23.699554Z","shell.execute_reply":"2024-09-10T11:42:24.885767Z"},"trusted":true},"execution_count":112,"outputs":[]},{"cell_type":"code","source":"trainer.train()\n\nwandb.finish()","metadata":{"execution":{"iopub.status.busy":"2024-09-10T11:42:26.884954Z","iopub.execute_input":"2024-09-10T11:42:26.885360Z","iopub.status.idle":"2024-09-10T12:01:53.136478Z","shell.execute_reply.started":"2024-09-10T11:42:26.885317Z","shell.execute_reply":"2024-09-10T12:01:53.135701Z"},"trusted":true},"execution_count":113,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n    <div>\n      \n      <progress value='2500' max='2500' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      [2500/2500 19:06, Epoch 1/1]\n    </div>\n    <table border=\"1\" class=\"dataframe\">\n  <thead>\n <tr style=\"text-align: left;\">\n      <th>Step</th>\n      <th>Training Loss</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>2500</td>\n      <td>0.240900</td>\n    </tr>\n  </tbody>\n</table><p>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"VBox(children=(Label(value='6.448 MB of 6.448 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":""}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"<style>\n    table.wandb td:nth-child(1) { padding: 0 10px; text-align: left ; width: auto;} td:nth-child(2) {text-align: left ; width: 100%}\n    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n    </style>\n<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>train/epoch</td><td>▁▁</td></tr><tr><td>train/global_step</td><td>▁▁</td></tr><tr><td>train/grad_norm</td><td>▁</td></tr><tr><td>train/learning_rate</td><td>▁</td></tr><tr><td>train/loss</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>total_flos</td><td>5298695946240000.0</td></tr><tr><td>train/epoch</td><td>1.0</td></tr><tr><td>train/global_step</td><td>2500</td></tr><tr><td>train/grad_norm</td><td>99515.1875</td></tr><tr><td>train/learning_rate</td><td>0.0</td></tr><tr><td>train/loss</td><td>0.2409</td></tr><tr><td>train_loss</td><td>0.24091</td></tr><tr><td>train_runtime</td><td>1148.0301</td></tr><tr><td>train_samples_per_second</td><td>34.842</td></tr><tr><td>train_steps_per_second</td><td>2.178</td></tr></table><br/></div></div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View run <strong style=\"color:#cdcd00\">tough-fire-1</strong> at: <a href='https://wandb.ai/krinal/imdb-sentiment/runs/cgul5m2d' target=\"_blank\">https://wandb.ai/krinal/imdb-sentiment/runs/cgul5m2d</a><br/> View project at: <a href='https://wandb.ai/krinal/imdb-sentiment' target=\"_blank\">https://wandb.ai/krinal/imdb-sentiment</a><br/>Synced 5 W&B file(s), 0 media file(s), 81 artifact file(s) and 1 other file(s)"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Find logs at: <code>./wandb/run-20240910_110234-cgul5m2d/logs</code>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require(\"core\")`! See https://wandb.me/wandb-core for more information."},"metadata":{}}]},{"cell_type":"code","source":"wandb.init(mode=\"disabled\")","metadata":{"execution":{"iopub.status.busy":"2024-09-10T12:03:04.699666Z","iopub.execute_input":"2024-09-10T12:03:04.700644Z","iopub.status.idle":"2024-09-10T12:03:04.728646Z","shell.execute_reply.started":"2024-09-10T12:03:04.700595Z","shell.execute_reply":"2024-09-10T12:03:04.727710Z"},"trusted":true},"execution_count":114,"outputs":[{"execution_count":114,"output_type":"execute_result","data":{"text/html":"<button onClick=\"this.nextSibling.style.display='block';this.style.display='none';\">Display W&B run</button><iframe src='?jupyter=true' style='border:none;width:100%;height:420px;display:none;'></iframe>","text/plain":"<wandb.sdk.wandb_run.Run at 0x7861edd35b70>"},"metadata":{}}]},{"cell_type":"code","source":"trainer.evaluate()","metadata":{"execution":{"iopub.status.busy":"2024-09-10T12:03:13.158690Z","iopub.execute_input":"2024-09-10T12:03:13.159577Z","iopub.status.idle":"2024-09-10T12:04:12.783454Z","shell.execute_reply.started":"2024-09-10T12:03:13.159529Z","shell.execute_reply":"2024-09-10T12:04:12.782520Z"},"trusted":true},"execution_count":115,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"\n    <div>\n      \n      <progress value='527' max='313' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      [313/313 01:56]\n    </div>\n    "},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading builder script:   0%|          | 0.00/7.55k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2b1ba856f9024fc1b59b183f1a1cdfdd"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading builder script:   0%|          | 0.00/7.36k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6c783d1dca12491ab0ed07be9a948ce6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading builder script:   0%|          | 0.00/6.77k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"56dae26c6d444edd90281ef856b124aa"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading builder script:   0%|          | 0.00/4.20k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1a6eb0c8321f43e29752ba0a0c04c2be"}},"metadata":{}},{"execution_count":115,"output_type":"execute_result","data":{"text/plain":"{'eval_loss': 0.18838872015476227,\n 'eval_precision': 0.9336,\n 'eval_recall': 0.9336,\n 'eval_f1': 0.9336,\n 'eval_accuracy': 0.9336,\n 'eval_runtime': 59.6147,\n 'eval_samples_per_second': 83.872,\n 'eval_steps_per_second': 5.25,\n 'epoch': 1.0}"},"metadata":{}}]},{"cell_type":"code","source":"trainer.save_model(f\"models/{model_name}/checkpoint-final\")","metadata":{"execution":{"iopub.status.busy":"2024-09-10T12:05:38.117620Z","iopub.execute_input":"2024-09-10T12:05:38.118373Z","iopub.status.idle":"2024-09-10T12:05:38.740509Z","shell.execute_reply.started":"2024-09-10T12:05:38.118335Z","shell.execute_reply":"2024-09-10T12:05:38.739688Z"},"trusted":true},"execution_count":119,"outputs":[]},{"cell_type":"markdown","source":"#### Inference","metadata":{}},{"cell_type":"code","source":"from transformers import pipeline\n\nsentiment_model = pipeline(task=\"sentiment-analysis\", model=f\"models/{model_name}/checkpoint-final\")\n\nsentiment_model([\"I love this move\", \"This movie sucks!\"])","metadata":{"execution":{"iopub.status.busy":"2024-09-10T12:08:30.527095Z","iopub.execute_input":"2024-09-10T12:08:30.527519Z","iopub.status.idle":"2024-09-10T12:08:30.724945Z","shell.execute_reply.started":"2024-09-10T12:08:30.527465Z","shell.execute_reply":"2024-09-10T12:08:30.723933Z"},"trusted":true},"execution_count":121,"outputs":[{"name":"stderr","text":"Hardware accelerator e.g. GPU is available in the environment, but no `device` argument is passed to the `Pipeline` object. Model will be on CPU.\n","output_type":"stream"},{"execution_count":121,"output_type":"execute_result","data":{"text/plain":"[{'label': 'positive', 'score': 0.9952309727668762},\n {'label': 'negative', 'score': 0.9940729737281799}]"},"metadata":{}}]},{"cell_type":"code","source":"sentiment_model([\"will you really think this is right\", \"that is so dump\"])","metadata":{"execution":{"iopub.status.busy":"2024-09-10T12:09:24.621125Z","iopub.execute_input":"2024-09-10T12:09:24.621563Z","iopub.status.idle":"2024-09-10T12:09:24.692454Z","shell.execute_reply.started":"2024-09-10T12:09:24.621522Z","shell.execute_reply":"2024-09-10T12:09:24.691444Z"},"trusted":true},"execution_count":122,"outputs":[{"execution_count":122,"output_type":"execute_result","data":{"text/plain":"[{'label': 'positive', 'score': 0.7739349603652954},\n {'label': 'negative', 'score': 0.7883810997009277}]"},"metadata":{}}]},{"cell_type":"code","source":"sentiment_model([\"good that is work but really bad\", \"nice to see you\"])","metadata":{"execution":{"iopub.status.busy":"2024-09-10T12:10:04.867688Z","iopub.execute_input":"2024-09-10T12:10:04.868594Z","iopub.status.idle":"2024-09-10T12:10:04.927526Z","shell.execute_reply.started":"2024-09-10T12:10:04.868552Z","shell.execute_reply":"2024-09-10T12:10:04.926524Z"},"trusted":true},"execution_count":123,"outputs":[{"execution_count":123,"output_type":"execute_result","data":{"text/plain":"[{'label': 'negative', 'score': 0.9396520256996155},\n {'label': 'positive', 'score': 0.9787548184394836}]"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}